- content_for :title do
  = "All Transactions"

- content_for :breadcrumb do
  li
    p Bank
  li
    = link_to "All Transactions", {action: "index"}, class: "active"

- content_for :jscode do
  javascript:
    $(document).ready(function() {
      var initTableWithSearch = function() {
        var table = $('#tableWithSearch');
        var settings = {
            "sDom": "<t><'row'<p i>>",
            "destroy": true,
            "scrollCollapse": true,
            "oLanguage": {
                "sLengthMenu": "_MENU_ ",
                "sInfo": "Showing <b>_START_ to _END_</b> of _TOTAL_ entries"
            },
            "iDisplayLength": 20
        };
        table.dataTable(settings);
        $('#search-table').keyup(function() {
            table.fnFilter($(this).val());
        });
      }
      initTableWithSearch();
    });

/! START CONTAINER FLUID
.container-fluid.container-fixed-lg.bg-white
  /! START PANEL
  .panel.panel-transparent
    .panel-heading
      .panel-title
        | Transactions
      .clearfix
    .panel-body
      .row
        .col-xs-9
          input.form-control.pull-right#search-table type="text" placeholder="Search"
      .clearfix
      .row
        table.table.table-hover.demo-table-search.table-responsive-block#tableWithSearch style="width:100%"
          thead
            tr
              th style="width:10%" Finished at
              th style="width:20%" Debitor
              th style="width:20%" Creditor
              th style="width:10%" Operator
              th style="width:5%" Amount
              th style="width:10%" Category
              th style="width:20%" Details
              th style="width:5%"
          tbody
            - Bank::Transaction.all.each do |transaction|
              tr
                td.v-align-middle
                  p = transaction.created_at
                td.v-align-middle
                  - if ((transaction.debitor.is_a? Bank::IndividualAccount) || (transaction.debitor.is_a? Bank::OrganizationalAccount))
                    - if transaction.debitor.eql? HappyCorner.first.account.first
                      p style="font-style: italic" = transaction.debitor.owner.name + "(" + transaction.debitor.number + ")"
                    - else
                      p.bold = transaction.debitor.owner.name + "(" + transaction.debitor.number + ")"
                  - else
                    p.bold = transaction.debitor.number
                td.v-align-middle
                  - if ((transaction.creditor.is_a? Bank::IndividualAccount) || (transaction.creditor.is_a? Bank::OrganizationalAccount))
                    - if transaction.creditor.eql? HappyCorner.first.account.first
                      p style="font-style: italic" = transaction.creditor.owner.name + "(" + transaction.creditor.number + ")"
                    - else
                      p.bold = transaction.creditor.owner.name + "(" + transaction.creditor.number + ")"
                  - else
                    p.bold = transaction.creditor.number
                td.v-align-middle
                  p = transaction.operator.name
                td.v-align-middle
                  p = transaction.amount.to_s
                td.v-align-middle
                  - if transaction.is_a? Bank::ThirdPartyTransaction
                    p = "3rd Party"
                  - elsif transaction.is_a? Bank::TransferTransaction
                    p = "Transfer"
                  - elsif transaction.is_a? Bank::LoanTransaction
                    p = "Loan / Money Creation"
                  - elsif transaction.is_a? Corner::Account::CreditTransaction
                    - if transaction.is_a? Corner::Account::MigrationCreditTransaction
                      p = "Migration"
                    - elsif transaction.is_a? Corner::Account::SalaryCreditTransaction
                      p = "Salary"
                    - elsif transaction.is_a? Corner::Account::DrawdownLoanCreditTransaction
                      p = "Loan Drawdown"
                    - elsif transaction.is_a? Corner::Account::RepayLoanCreditTransaction
                      p = "Loan Repayment"
                    - elsif transaction.is_a? Corner::Account::PosCreditTransaction
                      p = "2nd Handed Good"
                    - else
                      p = "Corner - Other"
                  - else
                    p = "Other"
                td.v-align-middle
                  = form_tag({action: "update", id: transaction.id}, method: "put", class: "input-group")
                    input.form-control name="detail" value=transaction.detail type="text" placeholder="Detail"
                    span.input-group-btn
                      = button_tag "Modify", data: { disable_with: t('form.pleasewait') }, class: "btn btn-default"
                  /p = transaction.detail
                td.v-align-middle
                  - if transaction.is_a? Corner::Account::PosCreditTransaction
                    p
                      = link_to "Show", controller: 'bank/transaction', action:'show_pos', id: transaction.id


  /! END PANEL
/! END CONTAINER FLUID
